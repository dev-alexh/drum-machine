{"version":3,"sources":["logo.svg","components/DrumMachine.js","App.js","reportWebVitals.js","index.js"],"names":["DrumMachine","props","state","soundName","drumRefs","drumAudioRefs","keyClick","bind","drumClick","arrDrum","arrAudio","numOfElements","i","push","React","createRef","createDrumRefs","event","keyValue","key","toUpperCase","keyPossible","indexOf","this","setState","current","currentTime","play","style","fontWeight","backgroundColor","setTimeout","target","id","drumID","replace","drumArr","keySoundName","keySound","createDrumElement","arr","start","map","element","index","Col","sm","className","onClick","ref","src","Container","fluid","onKeyDown","tabIndex","Row","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc86b476.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nexport class DrumMachine extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            soundName: \"\"\r\n        };\r\n\r\n        this.drumRefs = [];\r\n        this.drumAudioRefs = [];\r\n\r\n        this.keyClick = this.keyClick.bind(this);\r\n        this.drumClick = this.drumClick.bind(this);\r\n\r\n        const createDrumRefs = (arrDrum, arrAudio, numOfElements) => {\r\n            for (var i = 0; i < numOfElements; i++) {\r\n                this.drumRefs.push(React.createRef());\r\n                this.drumAudioRefs.push(React.createRef());\r\n            }\r\n        };\r\n\r\n        createDrumRefs(this.drumRefs, this.drumAudioRefs, 9);\r\n    }\r\n\r\n    keyClick(event) {\r\n        const keyValue = event.key.toUpperCase();\r\n        const keyPossible = \"QWEASDZXC\";\r\n        if (keyPossible.indexOf(keyValue) != -1) {\r\n            this.setState(() => ({ soundName: \"Clapper \" + keyValue }));\r\n            this.drumAudioRefs[keyPossible.indexOf(keyValue)].current.currentTime = 0;\r\n            this.drumAudioRefs[keyPossible.indexOf(keyValue)].current.play();\r\n            this.drumRefs[keyPossible.indexOf(keyValue)].current.style.fontWeight = \"bold\";\r\n            this.drumRefs[keyPossible.indexOf(keyValue)].current.style.backgroundColor = \"#88c8f7\";\r\n            setTimeout(() => {\r\n                this.drumRefs[keyPossible.indexOf(keyValue)].current.style.fontWeight = \"normal\";\r\n                this.drumRefs[keyPossible.indexOf(keyValue)].current.style.backgroundColor = \"#e3f2fd\";\r\n            }, 100);\r\n        }\r\n    }\r\n\r\n    drumClick(event) {\r\n        this.setState(() => ({ soundName: event.target.id }));\r\n        const drumID = event.target.id.replace(\"Clapper \", \"\");\r\n        const keyPossible = \"QWEASDZXC\";\r\n        if (keyPossible.indexOf(drumID) != -1) {\r\n            this.drumAudioRefs[keyPossible.indexOf(drumID)].current.currentTime = 0;\r\n            this.drumAudioRefs[keyPossible.indexOf(drumID)].current.play();\r\n            this.drumRefs[keyPossible.indexOf(drumID)].current.style.fontWeight = \"bold\";\r\n            this.drumRefs[keyPossible.indexOf(drumID)].current.style.backgroundColor = \"#88c8f7\";\r\n            setTimeout(() => {\r\n                this.drumRefs[keyPossible.indexOf(drumID)].current.style.fontWeight = \"normal\";\r\n                this.drumRefs[keyPossible.indexOf(drumID)].current.style.backgroundColor = \"#e3f2fd\";\r\n            }, 100);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const drumArr = [\r\n            [\r\n                {\r\n                    key: \"Q\",\r\n                    keySoundName: \"Clapper Q\",\r\n                    keySound:\r\n                        \"https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Claps/40[kb]real-room-clap.wav.mp3\"\r\n                },\r\n                {\r\n                    key: \"W\",\r\n                    keySoundName: \"Clapper W\",\r\n                    keySound:\r\n                        \"https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Claps/34[kb]brightclap.aif.mp3\"\r\n                },\r\n                {\r\n                    key: \"E\",\r\n                    keySoundName: \"Clapper E\",\r\n                    keySound:\r\n                        \"https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Claps/50[kb]Wsh-clap1.wav.mp3\"\r\n                }\r\n            ],\r\n            [\r\n                {\r\n                    key: \"A\",\r\n                    keySoundName: \"Clapper A\",\r\n                    keySound:\r\n                        \"https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Claps/36[kb]c2.aif.mp3\"\r\n                },\r\n                {\r\n                    key: \"S\",\r\n                    keySoundName: \"Clapper S\",\r\n                    keySound:\r\n                        \"https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Claps/41[kb]c4.aif.mp3\"\r\n                },\r\n                {\r\n                    key: \"D\",\r\n                    keySoundName: \"Clapper D\",\r\n                    keySound:\r\n                        \"https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Claps/102[kb]c5.aif.mp3\"\r\n                }\r\n            ],\r\n            [\r\n                {\r\n                    key: \"Z\",\r\n                    keySoundName: \"Clapper Z\",\r\n                    keySound:\r\n                        \"https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Claps/147[kb]clap10.wav.mp3\"\r\n                },\r\n                {\r\n                    key: \"X\",\r\n                    keySoundName: \"Clapper X\",\r\n                    keySound:\r\n                        \"https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Claps/28[kb]clap808.aif.mp3\"\r\n                },\r\n                {\r\n                    key: \"C\",\r\n                    keySoundName: \"Clapper C\",\r\n                    keySound:\r\n                        \"https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Claps/30[kb]claps-w_cymb.WAV.mp3\"\r\n                }\r\n            ]\r\n        ];\r\n\r\n        const createDrumElement = (arr, start) => {\r\n            return arr.map((element, index) => (\r\n                <Col sm={4}\r\n                    className=\"drum-pad\"\r\n                    id={element.keySoundName}\r\n                    key={element.keySoundName}\r\n                    onClick={this.drumClick}\r\n                    ref={this.drumRefs[index + start]}\r\n                >\r\n                    <audio\r\n                        src={element.keySound}\r\n                        className=\"clip\"\r\n                        id={element.key}\r\n                        ref={this.drumAudioRefs[index + start]}\r\n                    ></audio>\r\n                    {element.key}\r\n                </Col>\r\n            ));\r\n        };\r\n\r\n        return (\r\n            <Container fluid id=\"display\" onKeyDown={this.keyClick}\r\n                tabIndex=\"-1\">\r\n                <h1>Random Clappers</h1>\r\n                <p id=\"instructions\">Try with your keyboard!</p>\r\n                <Container id=\"drumSet\">\r\n                    <Row>\r\n                        {createDrumElement(drumArr[0], 0)}\r\n                    </Row>\r\n                    <Row>\r\n                        {createDrumElement(drumArr[1], 3)}\r\n                    </Row>\r\n                    <Row>\r\n                        {createDrumElement(drumArr[2], 6)}\r\n                    </Row>\r\n                </Container>\r\n                <p id=\"playingSign\">Now playing: {this.state.soundName} </p>\r\n            </Container>\r\n        );\r\n    }\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport { DrumMachine } from './components/DrumMachine';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <div>\n      <DrumMachine />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}